<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tes.role">
    <resultMap id="RoleMap" type="co.bugu.tes.domain.Role">
        <id column="role_id" property="id" jdbcType="INTEGER"/>
        <result column="role_description" property="description" jdbcType="VARCHAR"/>
        <result column="role_name" property="name" jdbcType="VARCHAR"/>
        <result column="role_status" property="status" jdbcType="INTEGER"/>
        <result column="role_code" property="code" jdbcType="VARCHAR"/>
        <collection property="authorityList" ofType="co.bugu.tes.domain.Authority" resultMap="AuthorityMap"/>
    </resultMap>

    <resultMap id="AuthorityMap" type="co.bugu.tes.domain.Authority">
        <id column="auth_id" property="id" jdbcType="INTEGER"/>
        <result column="auth_action" property="action" jdbcType="VARCHAR"/>
        <result column="auth_controller" property="controller" jdbcType="VARCHAR"/>
        <result column="auth_description" property="description" jdbcType="VARCHAR"/>
        <result column="auth_name" property="name" jdbcType="VARCHAR"/>
        <result column="auth_param" property="param" jdbcType="VARCHAR"/>
        <result column="auth_status" property="status" jdbcType="INTEGER"/>
        <result column="auth_superior_id" property="superiorId" jdbcType="INTEGER"/>
        <result column="auth_type" property="type" jdbcType="INTEGER"/>
        <result column="auth_url" property="url" jdbcType="VARCHAR"/>
        <result column="auth_accept_method" property="acceptMethod" jdbcType="VARCHAR"/>
        <result column="auth_is_api" property="isApi" jdbcType="INTEGER"/>

    </resultMap>
    <sql id="authority_list">
    auth.id as auth_id, auth.action as auth_action, auth.controller as auth_controller,
    auth.description as auth_description, auth.name as auth_name, auth.param as auth_param,
    auth.status as auth_status, auth.superior_id as auth_superior_id, auth.type as auth_type,
    auth.url as auth_url, auth.accept_method as auth_accept_method, auth.is_api as auth_is_api
  </sql>
    <sql id="role_list">
    role.id as role_id, role.code as role_code, role.description as role_description, role.name as role_name,
    role.status as role_status
  </sql>
    <select id="selectById" resultMap="RoleMap" parameterType="java.lang.Integer">
        select
        <include refid="role_list"/>,
        <include refid="authority_list"/>
        from role role left join role_authority_x ra on role.id = ra.role_id
        left join authority auth on auth.id = ra.authority_id
        where role.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteById" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="co.bugu.tes.domain.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                #{code, jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateById" parameterType="co.bugu.tes.domain.Role">
        update role
        <set>
            <if test="code != null">
                code = #{code, jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="findByObject" resultMap="RoleMap" parameterType="co.bugu.tes.domain.Role">
        select
        <include refid="role_list"/>
        from role role
        <where>
            <if test="code != null">
                and code = #{code, jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                and description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                and name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=INTEGER},
            </if>
        </where>
    </select>

    <delete id="deleteRoleAuthX" parameterType="map">
        DELETE  from role_authority_x
        <where>
            <if test="roleId != null">
                role_id = #{roleId}
            </if>
            <if test="authorityId != null">
                and authority_id = #{authorityId}
            </if>
        </where>
    </delete>

    <insert id="addRoleAuthX" parameterType="map">
        insert into role_authority_x (role_id, authority_id) values (#{roleId}, #{authorityId})
    </insert>
</mapper>